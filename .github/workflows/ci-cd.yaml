name: CI/CD Pipeline for Kubernetes Deployment

on:
  push:
    branches:
      - main  # Executa o workflow apenas no push para a branch main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      APP_NAME: eco-tech
      DOCKER_IMAGE: a30768/eco-tech-materials:latest  # Substitua com seu DockerHub user/repo
      K8S_DEPLOYMENT_FILE: ./1-deployment.yaml
      K8S_SERVICE_FILE: ./2-service.yaml

    steps:
      # Step 1: Checkout o c√≥digo
      - name: Checkout Code
        uses: actions/checkout@v4

      # Step 2: Configurar Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 3: Logar no DockerHub
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 4: Build e Push da imagem Docker
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./dockerfile
          push: true
          tags: ${{ env.DOCKER_IMAGE }}

      # Step 5: Configurar kubectl
      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'v1.29.0'

      # Step 6: Configurar K8s com Minikube
      - name: Set up Minikube
        uses: medyagh/setup-minikube@v0.0.14
        with:
          driver: docker

      # Step 7: Aplicar arquivos do Kubernetes (Deployment e Service)
      - name: Apply Kubernetes Manifests
        run: |
          kubectl apply -f ${{ env.K8S_DEPLOYMENT_FILE }}
          kubectl apply -f ${{ env.K8S_SERVICE_FILE }}
          git pull origin main
          npm install
          npm run start
          EOF
